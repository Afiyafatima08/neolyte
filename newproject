<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Neolyte - Neonatal Jaundice Detection</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:400,500,600,700&display=swap">
    <style>
        :root {
            --red: #d32f2f;
            --blue: #1565c0;
            --lightblue: #e3f2fd;
            --lightred: #ffeaea;
            --bg: #f6f7fa;
            --card: #fff;
            --shadow: 0 4px 16px rgba(21,101,192,0.06);
            --radius: 16px;
        }
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(120deg, var(--lightblue) 60%, var(--lightred) 100%);
            margin:0;
        }
        header {
            background: linear-gradient(90deg, var(--blue), var(--red));
            color:#fff; padding:1rem 2rem;
            display:flex; align-items:center; justify-content:space-between;
        }
        .logo {
            font-weight:700; font-size:1.5rem; letter-spacing:2px;
            display:flex;align-items:center;gap:.5rem;
        }
        nav {
            display:flex; gap:1rem;
        }
        nav button {
            background:rgba(0,0,0,0.03);color:#fff;border:none;padding:.6rem 1.2rem;
            border-radius:var(--radius);font-weight:500;cursor:pointer;font-family:inherit;
            transition:.2s;
        }
        nav button.active, nav button:hover {
            background:#fff;color:var(--blue);
        }
        .userbox {
            display:flex;align-items:center;gap:.8rem;background:#fff;
            color:var(--blue);padding:.4rem 1.1rem;border-radius:var(--radius);font-weight:500;
        }
        .userbox .avatar {
            background:linear-gradient(90deg,var(--blue),var(--red));
            color:#fff;border-radius:50%;padding:.4rem .7rem;font-size:1.1rem;
            font-weight:700;
        }
        .container {
            max-width:1100px;margin:2rem auto;padding:0 1rem;
        }
        .card {
            background:var(--card);padding:2.3rem 2rem;border-radius:var(--radius);
            box-shadow:var(--shadow);margin-bottom:2rem;
        }
        .tabs {display:flex;gap:1rem;margin-bottom:1.5rem;}
        .tabs button {
            background:var(--lightblue);color:var(--blue);border:none;
            padding:.7rem 1.7rem;border-radius:var(--radius);font-weight:600;
            cursor:pointer; transition:.25s;
        }
        .tabs button.active, .tabs button:hover {
            background:var(--blue);color:#fff;
        }
        .hide {display:none;}
        /* Auth forms */
        .auth-form {max-width:420px;margin:2rem auto;}
        .auth-form h2 {margin-bottom:.8rem;font-size:2rem;color:var(--blue);}
        .auth-form label {font-weight:500;color:var(--blue);margin-bottom:.15rem;}
        .auth-form input {
            width:100%;padding:.7rem;border:1.5px solid var(--blue);border-radius:10px;
            font-family:inherit;margin-bottom:1.1rem;
        }
        .auth-form button {
            background:var(--red);color:#fff;border:none;padding:.8rem 1.6rem;
            border-radius:var(--radius);font-size:1rem;font-weight:500;cursor:pointer;
            width:100%;margin-top:.4rem;
        }
        /* Analysis */
        .upload-box {border:2px dashed var(--blue);padding:2rem;text-align:center;border-radius:var(--radius);background:var(--lightblue);}
        .upload-box img {max-width:450px;display:block;margin:1.2rem auto;border-radius:var(--radius);}
        .btn-row {display:flex;gap:1rem;justify-content:center;margin:1.2rem 0;}
        .btn-row button {flex:1;background:var(--blue);color:#fff;border:none;padding:.7rem;border-radius:var(--radius);}
        .result-box {margin-top:2.5rem;padding:1.7rem;border-radius:var(--radius);background:#eafafc;box-shadow:var(--shadow);}
        .result-box .val {font-size:1.39rem;font-weight:700;margin-bottom:.2rem;}
        .result-box .badge {
            font-weight:600;padding:.3rem 1.1rem;border-radius:15px;font-size:1rem;
            border:2px solid;display:inline-block;
        }
        .badge.normal {border-color:#388e3c;color:#388e3c;background:rgba(56,142,60,.12);}
        .badge.mild {border-color:#fbc02d;color:#fbc02d;background:rgba(251,192,45,.13);}
        .badge.attn {border-color:#d32f2f;color:#d32f2f;background:rgba(211,47,47,.11);}
        .conf-bar {
            background:#eee;border-radius:7px;height:13px;overflow:hidden;width:180px;margin-top:.6rem;
        }
        .conf-fill {
            background:linear-gradient(90deg,var(--blue),var(--red));
            height:100%;border-radius:7px;transition:width .7s;
        }
        /* Lighting alert */
        .light-alert, .notif-alert {
            background:var(--red);color:#fff;box-shadow:0 3px 18px rgba(21,101,192,.13);
            border-radius:var(--radius);padding:1.3rem;font-weight:500;position:fixed;top:65px;right:33px;max-width:340px;z-index:99;display:none;
        }
        .light-alert.visible, .notif-alert.visible {display:block;}
        .light-alert ul {margin:1rem 0;}
        .light-alert ul li {font-size:.95rem;margin-bottom:.3rem;}
        .notif-alert .btns {margin-top:.8rem;display:flex;gap:1rem;}
        .notif-alert button {background:#fff;color:var(--red);border:none;border-radius:9px;padding:.5rem 1.1rem;cursor:pointer;}
        /* Chart & History */
        .history-card table {width:100%;margin-top:.6rem;border-collapse:collapse;}
        .history-card th, .history-card td {text-align:left;padding:.9rem;}
        .history-card th {background:var(--blue);color:#fff;}
        .history-card td {border-bottom:1px solid #e5e5e5;}
        .chartbox {margin-top:2rem;background:#f9f9ff;padding:1.2rem 2rem;border-radius:var(--radius);}
        footer {padding:2rem;text-align:center;background:linear-gradient(90deg,var(--blue),var(--red));color:#fff;font-size:1.07rem;}
        @media(max-width:680px) {
            .upload-box img {max-width:95vw;}
            .container, .card {padding:1rem;}
        }
    </style>
</head>
<body>
    <header>
        <div class="logo">ðŸ”¬ Neolyte</div>
        <nav id="navTabs">
            <button class="active" onclick="showTab('login')">Login</button>
            <button onclick="showTab('signup')">Sign Up</button>
        </nav>
        <div class="userbox hide" id="userBox">
            <span class="avatar" id="userAvatar"></span>
            <span id="userName"></span>
            <button onclick="doLogout()">Logout</button>
        </div>
    </header>
    <div class="container">
        <!-- Tabs -->
        <div class="tabs hide" id="siteTabs">
            <button class="active" onclick="showTab('dashboard')">Dashboard</button>
            <button onclick="showTab('history')">History</button>
            <button onclick="showTab('about')">About</button>
        </div>

        <!-- Auth Forms -->
        <div id="loginTab" class="card auth-form">
            <h2>Login</h2>
            <form onsubmit="return doLogin(event)">
                <label>Email</label>
                <input type="email" id="loginEmail" required placeholder="doctor@hospital.com">
                <label>Password</label>
                <input type="password" id="loginPwd" required placeholder="Your password">
                <button type="submit">Login</button>
            </form>
            <div style="margin-top:1rem;text-align:center;">
                <span>Don't have an account?</span>
                <button type="button" onclick="showTab('signup')" style="background:var(--blue);color:#fff;margin-top:.3rem;">Sign Up</button>
            </div>
        </div>
        <div id="signupTab" class="card auth-form hide">
            <h2>Sign Up</h2>
            <form onsubmit="return doSignup(event)">
                <label>Full Name</label>
                <input type="text" id="signupName" required placeholder="Dr. Jane Smith">
                <label>Email</label>
                <input type="email" id="signupEmail" required>
                <label>Password</label>
                <input type="password" id="signupPwd" required minlength="6">
                <button type="submit">Create Account</button>
            </form>
            <div style="margin-top:1rem;text-align:center;">
                <span>Already have an account?</span>
                <button type="button" onclick="showTab('login')" style="background:var(--red);color:#fff;margin-top:.3rem;">Login</button>
            </div>
        </div>

        <!-- Dashboard -->
        <div id="dashboardTab" class="card hide">
            <h2>New Analysis</h2>
            <div id="lightNotice" class="light-alert"></div>
            <div class="upload-box" id="uploadBox">
                <div>
                    <input type="file" id="imgFile" accept="image/*" style="display:none" onchange="handleImage(this.files[0])">
                    <button type="button" onclick="document.getElementById('imgFile').click()" style="background:var(--blue);color:#fff;">Upload Image</button>
                    <button type="button" onclick="captureWebcam()" style="margin-left:.7rem;background:var(--red);color:#fff;">Use Webcam</button>
                </div>
                <img id="imgPrev" class="hide" alt="image preview">
            </div>
            <div class="btn-row">
                <button id="btnAnalyze" onclick="startAnalysis()" disabled>Start Analysis</button>
            </div>
            <div id="resultCont"></div>
        </div>
        
        <!-- History -->
        <div id="historyTab" class="card history-card hide">
            <h2>Analysis History</h2>
            <table>
                <thead>
                    <tr><th>Date/Time</th><th>Bilirubin</th><th>RGB</th><th>Status</th></tr>
                </thead>
                <tbody id="histTable"></tbody>
            </table>
            <div class="chartbox"><canvas id="histChart" height="180"></canvas></div>
        </div>
        
        <!-- About -->
        <div id="aboutTab" class="card hide">
            <h2>About Neolyte</h2>
            <p>Neolyte is a cutting-edge, non-invasive neonatal jaundice detector using AI-powered skin color analysis from facial images. Early and accurate screening for doctors, parents, and hospitals.</p>
            <ul>
                <li><b>Non-Invasive:</b> No needles, scan with phone/webcam.</li>
                <li><b>Lighting Detection:</b> Ensures analysis is reliable by checking image brightness.</li>
                <li><b>Confidence Level:</b> Each result shows a clinical certainty score.</li>
                <li><b>Parent Dashboard:</b> View past scan trends with alerts & tips.</li>
                <li><b>Data Privacy:</b> Your images and history remain secure.</li>
            </ul>
            <p style="margin-top:.8rem;">Developed by biomedical engineers, pediatricians, and AI researchers.<br>For clinical decisions, always consult a physician.</p>
        </div>
    </div>

    <!-- Notification -->
    <div id="userNotif" class="notif-alert"></div>

    <footer>Â© 2025 Neolyte | Early Detection for Brighter Beginnings</footer>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Mock DB
        let users = JSON.parse(localStorage.getItem('nUsers')||'[]');
        let history = JSON.parse(localStorage.getItem('nHistory')||'[]');
        let currUser = JSON.parse(localStorage.getItem('nCurUser')||'null');
        let currImg = null, curLight=120;

        function $(id){return document.getElementById(id);}
        // Tabs
        function showTab(tab){
            ['login','signup','dashboard','history','about'].forEach(t=>{
                $(t+'Tab').classList.add('hide');
                const btnTab = document.querySelector('.tabs button[onclick*="'+t+'"]');
                if(btnTab)btnTab.classList.remove('active');
            });
            $(tab+'Tab').classList.remove('hide');
            const btnTab = document.querySelector('.tabs button[onclick*="'+tab+'"]');
            if(btnTab)btnTab.classList.add('active');
        }
        // Auth logic
        function doLogin(e){
            e.preventDefault();
            let email = $('loginEmail').value, pwd=$('loginPwd').value;
            let user = users.find(u=>u.email==email&&u.pwd==pwd);
            if(!user){alert('Login failed.');return false;}
            currUser = user;localStorage.setItem('nCurUser',JSON.stringify(user));
            updateLoginState();
            showTab('dashboard');
            return false;
        }
        function doSignup(e){
            e.preventDefault();
            let nm=$('signupName').value, email = $('signupEmail').value, pwd=$('signupPwd').value;
            if(users.some(u=>u.email==email)){alert('User exists.');return false;}
            let newU={name:nm,email:email,pwd:pwd};
            users.push(newU);localStorage.setItem('nUsers',JSON.stringify(users));
            currUser = newU;localStorage.setItem('nCurUser',JSON.stringify(newU));
            updateLoginState();
            showTab('dashboard');
            return false;
        }
        function doLogout(){
            currUser=null;localStorage.removeItem('nCurUser');
            navTabs.style.display="flex";userBox.classList.add('hide');siteTabs.classList.add('hide');
            showTab('login');
        }
        function updateLoginState(){
            if(currUser){
                navTabs.style.display="none";userBox.classList.remove('hide');
                siteTabs.classList.remove('hide');
                $('userName').textContent=currUser.name;$('userAvatar').textContent=currUser.name[0]||'U';
            }else{
                navTabs.style.display="flex";userBox.classList.add('hide');
                siteTabs.classList.add('hide');
            }
        }
        updateLoginState();
        if(currUser)showTab('dashboard');
        // Image upload/capture
        function handleImage(file){
            if(!file.type.match(/image/)){alert('Select an image!');return;}
            let reader=new FileReader();
            reader.onload = e=>{
                currImg = e.target.result;
                imgPrev.src = currImg;imgPrev.classList.remove('hide');
                analyzeLighting(currImg);
                btnAnalyze.disabled=false;
            };
            reader.readAsDataURL(file);
        }
        function analyzeLighting(imgData){
            let img = new Image();
            img.onload=()=>{
                let cvs=document.createElement('canvas');
                cvs.width=img.width;cvs.height=img.height;
                let ctx=cvs.getContext('2d');ctx.drawImage(img,0,0);
                let dt = ctx.getImageData(0,0,cvs.width,cvs.height).data;
                let sum=0; for(let i=0;i<dt.length;i+=4)sum+=(dt[i]+dt[i+1]+dt[i+2])/3;
                curLight = sum/(dt.length/4);
                let msg='',show=false;
                if(curLight>155){msg="Excellent lighting detected.";btnAnalyze.disabled=false;}
                else if(curLight>110){msg="Good lighting, analysis likely reliable.";btnAnalyze.disabled=false;}
                else if(curLight>75){msg="Moderate lighting. Move to brighter area for optimal scan.";btnAnalyze.disabled=false;show=true;}
                else{msg="Poor lighting! Move to brighter area for reliable analysis.";btnAnalyze.disabled=true;show=true;}
                lightNotice.textContent=msg;lightNotice.classList.remove('visible');
                if(show){
                    lightNotice.classList.add('visible');
                    lightNotice.innerHTML=msg+'<ul><li>Use natural daylight or bright indoor lights.</li><li>Avoid shadows over the face.</li><li>No direct flash.</li></ul>';
                }
                else lightNotice.classList.remove('visible');
            };
            img.src = imgData;
        }
        function captureWebcam(){
            // Browser-based; security blocks auto file access so prompt user to take screenshot or use webcam widget.
            alert("Please use a smartphone camera or upload a saved photo. Webcam capture is demo-only here.");
        }
        // Analysis
        function startAnalysis(){
            if(!currImg){alert("No image loaded.");return;}
            resultCont.innerHTML="Analyzing...";
            setTimeout(()=>{
                let img = new Image();
                img.onload=()=>{
                    let cvs=document.createElement('canvas');
                    cvs.width=img.width;cvs.height=img.height;
                    let ctx=cvs.getContext('2d');ctx.drawImage(img,0,0);
                    // Sample from center ROI
                    let cx=img.width/2, cy=img.height/2, side=52, vals=[],cnt=0;
                    for(let x=cx-side;x<=cx+side;x+=6)
                    for(let y=cy-side;y<=cy+side;y+=6)
                        if(x>0&&y>0&&x<img.width&&y<img.height){
                            let px = ctx.getImageData(x,y,1,1).data;
                            vals.push(px);cnt++;
                        }
                    let sumR=0,sumG=0,sumB=0;
                    vals.forEach(px=>{sumR+=px[0];sumG+=px[1];sumB+=px[2];});
                    let avgR=Math.round(sumR/cnt), avgG=Math.round(sumG/cnt), avgB=Math.round(sumB/cnt);
                    // HSV conversion
                    let r=avgR/255,g=avgG/255,b=avgB/255;
                    let mx=Math.max(r,g,b), mn=Math.min(r,g,b),d=mx-mn;
                    let h=0,s=0,v=mx;
                    if(d!==0){
                        if(mx==r)h=60*((g-b)/d%6);
                        else if(mx==g)h=60*((b-r)/d+2);
                        else h=60*((r-g)/d+4);
                    }
                    if(h<0)h+=360;
                    s = mx===0?0:d/mx;
                    let yellowIdx=(avgR+avgG)/2-avgB;
                    let bilirubin=Math.max(7,Math.min(23,10+yellowIdx/18+(curLight<110?2.2:0))).toFixed(1);
                    let status = bilirubin<12?"Normal":"Mild Jaundice";
                    let badge="normal";
                    if(bilirubin>=15){status="Needs Attention";badge="attn";}
                    else if(bilirubin>=12){badge="mild";}
                    // Confidence logic
                    let conf=88;
                    if(curLight<77)conf-=15;
                    else if(curLight<110)conf-=7;
                    let contrast=Math.abs(mx-mn)*100;if(contrast<25)conf-=12;
                    conf=Math.max(60,Math.min(98,conf+Math.random()*4));
                    resultCont.innerHTML =
                        `<div class="result-box">
                            <div><b>RGB:</b> <span class="val">${avgR}, ${avgG}, ${avgB}</span></div>
                            <div><b>HSV:</b> <span class="val">${h.toFixed(0)}Â°, ${(s*100).toFixed(0)}%, ${(v*100).toFixed(0)}%</span></div>
                            <div><b>Bilirubin:</b> <span class="val">${bilirubin} mg/dL</span></div>
                            <div><b>Status:</b> <span class="badge ${badge}">${status}</span></div>
                            <div><b>Confidence:</b> <span class="val">${conf.toFixed(0)}%</span>
                                <div class="conf-bar"><div class="conf-fill" style="width:${conf*1.7}px"></div></div>
                            </div>
                        </div>`;
                    let rec = {
                        email:currUser.email,
                        date:new Date().toISOString(),
                        rgb:`${avgR},${avgG},${avgB}`,
                        bilirubin:bilirubin,
                        status:status,
                        badge:badge
                    };
                    history.push(rec);localStorage.setItem('nHistory',JSON.stringify(history));
                    btnAnalyze.disabled=true;
                    imgPrev.classList.add('hide');
                    // Show pending alert for no scan for 24h since last result
                    checkAlert();
                }; img.src=currImg;
            },1900);
        }
        // History
        function updateHistory(){
            let hist = history.filter(h=>currUser && h.email==currUser.email);
            let table='';
            if(!hist.length) table='<tr><td colspan="4" style="text-align:center;">No scans yet.</td></tr>';
            else table = hist.slice(-20).reverse().map(h=>`<tr>
                <td>${new Date(h.date).toLocaleString()}</td>
                <td>${h.bilirubin} mg/dL</td>
                <td>${h.rgb}</td>
                <td><span class="badge ${h.badge}">${h.status}</span></td>
            </tr>`).join('');
            histTable.innerHTML=table;
            showChart(hist);
        }
        function showChart(hist){
            let ctx=histChart.getContext('2d');
            if(window.bilChart)window.bilChart.destroy();
            let labels=hist.map(h=>new Date(h.date).toLocaleDateString()), vals=hist.map(h=>parseFloat(h.bilirubin));
            window.bilChart = new Chart(ctx, {
              type:'line',
              data:{
                labels:labels, datasets:[{
                  label:"Bilirubin (mg/dL)",data:vals, borderColor: 'var(--red)',backgroundColor:'rgba(211,47,47,.10)',tension:.40,
                  fill:true, pointBackgroundColor:'var(--blue)',pointRadius:6
                }]
              },
              options:{responsive:true,maintainAspectRatio:false,scales:{y:{beginAtZero:true,max:25}},plugins:{legend:{display:false}}}
            });
        }
        // Alert for pending check
        function checkAlert(){
            let hist = history.filter(h=>currUser && h.email==currUser.email);
            let lastScan = hist.length ? new Date(hist[hist.length-1].date) : null;
            if(!lastScan){
                showNotif("No scan found. Please complete your first bilirubin check.");
                return;
            }
            let deltaH = (new Date()-lastScan)/1000/60/60;
            if(deltaH>24) showNotif(`It's been ${Math.floor(deltaH)}h since last check. Please scan again for safe monitoring.`);
        }
        function showNotif(msg){
            userNotif.textContent=msg;userNotif.classList.add('visible');
            userNotif.innerHTML = msg + `<div class="btns">
                <button onclick="userNotif.classList.remove('visible');showTab('dashboard');">Scan Now</button>
                <button onclick="userNotif.classList.remove('visible');">Remind Later</button>
            </div>`;
            setTimeout(()=>userNotif.classList.remove('visible'),9000);
        }
        // Navigation wiring
        document.querySelectorAll('.tabs button').forEach(btn=>{
            btn.onclick=()=>{showTab(btn.textContent.toLowerCase());if(btn.textContent=="History")updateHistory();}
        });
        // On login, show site tabs
        document.querySelectorAll("nav button").forEach(btn=>btn.onclick=()=>{
            document.querySelectorAll("nav button").forEach(b=>b.classList.remove("active"));
            btn.classList.add("active");
        });
        // Load history chart on page show
        document.getElementById("siteTabs").addEventListener("click",function(e){
            if(e.target.textContent=="History")updateHistory();
       });
    </script>
</body>
</html>
